#!/bin/bash

DEV_ENV_BASE_VERSION=0.0.618
PORTS="/tmp/.ports-$(head -c 4 /dev/urandom | xxd -p)-$(date +'%Y%m%d-%H%M%S')"
touch "$PORTS"
TMUX=true
SCRIPT_HOME="$(dirname $BASH_SOURCE | sed 's:^\.$:'"$PWD"':g')"
DEFAULT_GCLOUD_BIN="\/usr\/local\/google-cloud-sdk\/bin\/gcloud"
[ ! -z "$CLOUD_SHELL" ] && ENV=cloud || ENV=mac
source ./env/env.sh $ENV
# load custom env variables if file exists:
[[ -f ./env/custom-env.sh ]] && echo "loading custom env variables" && source ./env/custom-env.sh
declare -a mounted_directories=("$WORKSPACE" "$GO_WORKSPACE" "${MOUNT}/.cache" "${MOUNT}/.config" "${MOUNT}/.docker" "${MOUNT}/.gnupg" "${MOUNT}/.groovy" "${MOUNT}/.gsutil" "${MOUNT}/.helm" "${MOUNT}/.jx" "${MOUNT}/.m2" "${MOUNT}/.terraform" "${MOUNT}/.terraform.d")
declare -a mounted_files=("${MOUNT}/.gitcookies" "${MOUNT}/.bash_history" "${MOUNT}/.boto")

if [ -n "$1" ] && [[ "$1" == "no-tmux" ]]
then
  TMUX=false
fi

function setup_workspace(){
  if [[ ! -d $GO_WORKSPACE ]]
  then
    mkdir -p $GO_WORKSPACE
  fi
}

function setup_mount(){
  if [[ ! -d $MOUNT ]]
  then
    mkdir -p $MOUNT
  fi
}

function setup_environment(){
  if [ ! -d $MOUNT/.kube ]
  then
    mkdir $MOUNT/.kube
    chmod 755 $MOUNT/.kube
    if [ -d ~/.kube ]
    then
      cp -r ~/.kube $MOUNT
      if [ -f $MOUNT/.kube/config ]
      then
        sed -i "s:^\(.*cmd-path\: \).*$:\1$DEFAULT_GCLOUD_BIN:" $MOUNT/.kube/config
      fi
    fi
  fi

  if [[ -f $MOUNT/.bashrc ]]
  then
    echo ".bashrc file exists in ${MOUNT}"
    echo "renaming .bashrc to .bash_profile"
    mv ${MOUNT}/.bashrc ${MOUNT}/.bash_profile
  fi

  if [[ ! -f $MOUNT/.gitconfig ]]
  then
    echo ".gitconfig file does not exist in ${MOUNT}"
    echo "copying .gitconfig to ${MOUNT}"
    if [[ -f ~/.gitconfig ]]
    then
      cp ~/.gitconfig ${MOUNT}/.gitconfig
    else
      echo "No ~/.gitconfig file found"
      echo "Please create the following file: ~/.gitconfig"
      cat ./.gitconfig_example
      exit 1
    fi
  else
    echo "Using ${MOUNT}/.gitconfig"
  fi

  if [[ -f ~/.config/gh/config.yml ]]
  then
    if [[ ! -f ${MOUNT}/.config/gh/config.yml ]]
    then
      echo "~/.config/gh/config.yml file does not exist in ${MOUNT}"
      echo "copying ~/.config/gh/config.yml to ${MOUNT}"
      cp ~/.config/gh/config.yml ${MOUNT}/.config/gh/config.yml
    fi
  else
    echo "GH cli is not authorized locally"
    echo "Please authorise to enable it"
  fi

  echo "checking that the environment file have been created"
  for file in "${mounted_files[@]}"
  do
    if [ ! -f ${file} ]
    then
      echo "${file} file doesn't exist, creating..."
      touch ${file}
    fi
  done

  echo "initializing mounted directories"
  for dir in "${mounted_directories[@]}"
  do
    mkdir -p ${dir}
  done
}

function run(){

  if $TMUX
  then
    CONTAINER_COMMAND="tmux -u"
  else
    CONTAINER_COMMAND="bash"
  fi

  rm "$PORTS"
  $SUDO docker run --name dev-env-$(head -c 4 /dev/urandom | xxd -p)-$(date +'%Y%m%d-%H%M%S') \
                   --rm \
                   --tty \
                   --env TERM=screen-256color \
                   --env USER=$USER \
                   --env HOSTNAME=$HOSTNAME \
                   --interactive \
                   --publish 8080:8080 \
                   --publish 8443:8443 \
                   --publish 1313:1313 \
                   --publish 2345:2345 \
                   --volume /home/developer/go-workspace/bin \
                   --volume $WORKSPACE:/home/developer/workspace:rw \
                   --volume $GO_WORKSPACE:/home/developer/go-workspace:cached \
                   --volume $MOUNT/.bash_history:/home/developer/.bash_history:cached \
                   --volume $MOUNT/.bash_profile:/home/developer/.bash_profile:cached \
                   --volume $MOUNT/.boto:/home/developer/.boto:cached \
                   --volume $MOUNT/.cache:/home/developer/.cache:cached \
                   --volume $MOUNT/.config:/home/developer/.config:cached \
                   --volume $MOUNT/.docker:/home/developer/.docker:cached \
                   --volume $MOUNT/.gitconfig:/home/developer/.gitconfig:cached \
                   --volume $MOUNT/.gnupg:/home/developer/.gnupg:cached \
                   --volume $MOUNT/.groovy:/home/developer/.groovy:cached \
                   --volume $MOUNT/.gsutil:/home/developer/.gsutil:cached \
                   --volume $MOUNT/.helm:/home/developer/.helm:cached \
                   --volume $MOUNT/.jx:/home/developer/.jx:cached \
                   --volume $MOUNT/.kube:/home/developer/.kube:cached \
                   --volume $MOUNT/.m2:/home/developer/.m2:cached \
                   --volume $MOUNT/.terraform:/home/developer/.terraform:cached \
                   --volume $MOUNT/.terraform.d:/home/developer/.terraform.d:cached \
                   --volume $SSH:/home/developer/.ssh:rw \
                   --volume $DOCKER_SOCKET:/var/run/docker.sock \
                   ${kube} \
                   gcr.io/jenkinsxio/dev-env-base:$DEV_ENV_BASE_VERSION-go-alpine $CONTAINER_COMMAND
}

setup_workspace
setup_mount
setup_environment
run

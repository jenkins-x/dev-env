#!/bin/bash

PORTS="/tmp/.ports-$(head -c 4 /dev/urandom | xxd -p)-$(date +'%Y%m%d-%H%M%S')"
touch "$PORTS"
SCRIPT_HOME="$(dirname $BASH_SOURCE | sed 's:^\.$:'"$PWD"':g')"
[ ! -z "$CLOUD_SHELL" ] && ENV=cloud || ENV=mac
declare -a env_files=(".bash_history" ".boto" ".gitconfig")
source ./env/env.sh $ENV

function setup_workspace(){
  if [[ ! -d $GO_WORKSPACE ]]
  then
    mkdir -p $GO_WORKSPACE
  fi
}

function setup_mount(){
  if [[ ! -d $MOUNT ]]
  then
    mkdir -p $MOUNT
  fi
}

function get_unused_port() {
  for port in $(seq 8000 9000);
  do
    if [ $(grep -c "$port" "$PORTS") -eq 0 ]
    then
      nc -zv 127.0.0.1 $port > /dev/null 2>&1
      [ $? -eq 1 ] \
        && echo $port >> "$PORTS"\
        && echo "$port" \
        && break;
    fi
  done
}

function setup_environment(){
  if [[ -d ~/.kube ]]
  then
    kube="--volume $HOME/.kube:/home/developer/.kube"
  fi

  if [[ -f $MOUNT/.bashrc ]]
  then
    echo ".bashrc file exists in ${MOUNT}"
    echo "renaming .bashrc to .bash_profile"
    mv ${MOUNT}/.bashrc ${MOUNT}/.bash_profile
  fi

  echo "checking that the environment file have been created"
  for file in "${env_files[@]}"
  do
    if [ ! -f ${MOUNT}/${file} ]
    then
      echo "${MOUNT}/${file} file doesn't exist, creating..."
      touch ${MOUNT}/${file}
    fi
  done
}

function run(){
  PORT_8080=$(get_unused_port)
  PORT_8443=$(get_unused_port)
  PORT_1313=$(get_unused_port)
  rm "$PORTS"
  $SUDO docker run --name dev-env-$(head -c 4 /dev/urandom | xxd -p)-$(date +'%Y%m%d-%H%M%S') \
                   --rm \
                   --tty \
                   --env TERM=screen-256color-bce \
                   --env PORT_8080=$PORT_8080 \
                   --env PORT_8443=$PORT_8443 \
                   --env PORT_1313=$PORT_1313 \
                   --env USER=$USER \
                   --env HOSTNAME=$HOSTNAME \
                   --interactive \
                   --cpus=6 \
                   --memory=8g \
                   --publish $PORT_8080:8080 \
                   --publish $PORT_8443:8443 \
                   --publish $PORT_1313:1313 \
                   --volume /home/developer/go-workspace/bin \
                   --volume $WORKSPACE:/home/developer/workspace:rw \
                   --volume $GO_WORKSPACE:/home/developer/go-workspace:cached \
                   --volume $MOUNT/.bash_history:/home/developer/.bash_history:cached \
                   --volume $MOUNT/.bash_profile:/home/developer/.bash_profile:cached \
                   --volume $MOUNT/.boto:/home/developer/.boto:cached \
                   --volume $MOUNT/.cache:/home/developer/.cache:cached \
                   --volume $MOUNT/.config:/home/developer/.config:cached \
                   --volume $MOUNT/.docker:/home/developer/.docker:cached \
                   --volume $MOUNT/.gitconfig:/home/developer/.gitconfig:cached \
                   --volume $MOUNT/.gnupg:/home/developer/.gnupg:cached \
                   --volume $MOUNT/.groovy:/home/developer/.groovy:cached \
                   --volume $MOUNT/.gsutil:/home/developer/.gsutil:cached \
                   --volume $MOUNT/.helm:/home/developer/.helm:cached \
                   --volume $MOUNT/.jx:/home/developer/.jx:cached \
                   --volume $MOUNT/.m2:/home/developer/.m2:cached \
                   --volume $MOUNT/.terraform:/home/developer/.terraform:cached \
                   --volume $MOUNT/.terraform.d:/home/developer/.terraform.d:cached \
                   --volume $SSH:/home/developer/.ssh:rw \
                   --volume $DOCKER_SOCKET:/var/run/docker.sock \
                   ${kube} \
                   gcr.io/jenkinsxio/dev-env-base:0.0.17-go-alpine tmux -u
}

setup_workspace
setup_mount
setup_environment
run
